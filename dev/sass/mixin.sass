//font face like bourbon

//only font mixin
//https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6
@import "scss_mixin/mixins.scss"
@import "../../node_modules/object-fit-images/preprocessors/mixin.sass"


//mixin-source
// =font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: false )
//   @font-face
//     font-family: $font-family
//     font-weight: $weight
//     font-style: $style
//     @if $asset-pipeline == true
//       src: font-url('#{$file-path}.eot')
//       src: font-url('#{$file-path}.eot?#iefix') format('embedded-opentype'), font-url('#{$file-path}.woff') format('woff'), font-url('#{$file-path}.ttf') format('truetype'), font-url('#{$file-path}.svg##{$font-family}') format('svg')
//     @else
//       src: url('#{$file-path}.eot')
//       src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'), url('#{$file-path}.woff') format('woff'), url('#{$file-path}.ttf') format('truetype'), url('#{$file-path}.svg##{$font-family}') format('svg')

//mixin-usage

// use in CMS
//+font-face("SourceName", '../font/Source/source', normal, italic)

//simple use
// +font-face("SourceName", '../font/Source/source', normal, normal, $asset-pipeline: true)




=absolute-center()
  position: absolute
  top: 50%
  left: 50%
  transform: translate(-50%,-50%)

=absolute-vertical()
  position: absolute
  top: 50%
  transform: translateY(-50%)

=position($position, $t: null, $r: null, $b: null, $l: null)
  position: $position
  top: $t
  right: $r
  bottom: $b
  left: $l


@function rem($n)
  @return $n / $baseFontSize * 1rem

//sprite usage
// +sprite($sprite)

=size($a, $b: false)
  width: $a+px
  @if $b
    height: $b+px
  @else
    height: $a+px
//

//to use sprite mixin
// +sprite($image_name)

//обрезаем текст и добавляем троеточие вконце
=elipsis()
  text-overflow: ellipsis
  overflow: hidden
  white-space: nowrap

//line height
=lh($lineHeight,$fontSize)
  line-height: $lineHeight/$fontSize

//+trs(color .25s linear, transform .25s linear)
//=trs($args...)
  transition: $args

//usage: +trs([property],[duration],[easing]);
=trs($property: all, $duration: .25s, $ease: linear)
  transition: $property $duration $ease

=max($break)
  @media only screen and (max-width: $break+px)
    @content

=min($break)
  @media only screen and (min-width: $break+px)
    @content

=bg($b: false)
  background-repeat: no-repeat
  background-position: center 0
  @if $b
  @else
    background-size: cover
=bgi($img)
  background-image: url('../img/general/'+$img)


=zoom($b: false)
  &::after
    content: ''
    position: absolute
    top: 0
    left: 0
    width: 100%
    height: 100%
    z-index: 3
    background: #000
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 227.406 227.406'%3E%3Cpath d='M217.576 214.708l-65.188-67.794c16.139-15.55 26.209-37.355 26.209-61.484 0-47.106-38.323-85.43-85.43-85.43C46.06 0 7.737 38.323 7.737 85.43c0 47.106 38.323 85.43 85.43 85.43 17.574 0 33.924-5.339 47.52-14.474l66.077 68.719a7.482 7.482 0 0 0 5.407 2.302 7.5 7.5 0 0 0 5.405-12.699zM22.737 85.43c0-38.835 31.595-70.43 70.43-70.43 38.835 0 70.43 31.595 70.43 70.43s-31.595 70.43-70.43 70.43c-38.835-.001-70.43-31.595-70.43-70.43z'/%3E%3Cpath d='M131.415 77.93h-30.748V47.182c0-4.143-3.357-7.5-7.5-7.5a7.499 7.499 0 0 0-7.5 7.5V77.93H54.918c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h30.748v30.749c0 4.143 3.357 7.5 7.5 7.5s7.5-3.357 7.5-7.5V92.93h30.748c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.499-7.5z'/%3E%3C/svg%3E")
    background-repeat: no-repeat
    background-position: center 150%
    @if $b
      background-size: $b+px
    @else
      background-size: 50px
    opacity: 0
    +trs
  &:hover
    &::after
      opacity: .5
      background-position: center


=img($percent: false, $cover: false)
  position: relative
  display: block
  font-size: 0
  &::before
    content: ''
    display: block
    @if $percent
      padding-top: #{$percent + "%"}
    @else
      padding-top: 70%
  img
    position: absolute
    top: 0
    left: 0
    width: 100%
    height: 100%
    @if $cover
    @else
      object-fit: cover


// =blick($b: false)
  overflow: hidden
  &::after
    content: ''
    position: absolute
    top: -50%
    right: -200%
    bottom: -50%
    left: -20%
    z-index: 1
    background: linear-gradient(to bottom,#e5ac8e00,#ffffffb3 50%,#e5ac8e00)
    transform: rotateZ(60deg) translate(-5em,7.5em)
    opacity: 0
    animation: sheens 3s infinite
// @keyframes sheens
  0%,79%
    opacity: 0
    transform: rotateZ(60deg) translate(-5em, 7.5em)
  80%
    opacity: 1
    transform: rotateZ(60deg) translate(-5em, 7.5em)
  95%
    opacity: 1
    transform: rotateZ(60deg) translate(1em, -11em)
  100%
    opacity: 0
    transform: rotateZ(60deg) translate(1em, -9em)

=blick($b: false)
  overflow: hidden
  &::after
    content: ''
    position: absolute
    top: -50%
    bottom: -50%
    left: 0
    width: 60px
    z-index: 1
    background: linear-gradient(to right,rgba(255, 255, 255, 0) 10%,rgba(255, 255, 255, 0.8) 50%,rgba(255, 255, 255, 0) 90%)
    transform:  rotateZ(30deg)
    animation: sheens 3s infinite
    animation-timing-function: cubic-bezier(0.07, 1.15, 0.41, 1.11)
@keyframes sheens
  0%
    left: -30%
    opacity: 0
  50%
    opacity: 1
  100%
    left: 130%
    opacity: 0

=sliding($duration: 3, $distance: 20, $timeFunc: ease)
  animation: #{"sliding" + $distance} infinite $timeFunc #{$duration + "s"}
  @keyframes #{"sliding" + $distance}
    0%
      transform: translateY(0)
    50%
      transform: translateY(#{$distance + "px"})








//
